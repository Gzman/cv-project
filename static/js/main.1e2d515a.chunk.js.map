{"version":3,"sources":["components/Header.js","components/Footer.js","models/EducationModel.js","models/ExperienceModel.js","models/PersonalInfoModel.js","models/Categories.js","components/validator.js","components/cv-form/CategoryItem.js","components/cv-form/Experience.js","components/cv-form/Education.js","components/cv-form/PersonalInformation.js","components/cv-form/CVForm.js","components/cv-output/PersonalInfoItem.js","components/cv-output/Category.js","components/cv-output/PersonalInformation.js","components/cv-output/ExperienceItem.js","components/cv-output/Experience.js","components/cv-output/EducationItem.js","components/cv-output/Education.js","components/cv-output/CVOutput.js","App.js","hooks/useCVData.js","index.js"],"names":["Header","className","Footer","href","EducationMeta","ExperienceMeta","PersonalInfoMeta","CategoriesMeta","PERSONAL_INFO","EXPERIENCE","EDUCATION","Categories","title","model","firstname","lastname","city","phoneNumber","email","FIRSTNAME","LASTNAME","TITLE","CITY","PHONE","EMAIL","from","to","company","position","description","FROM","TO","COMPANY","POSITION","DESCRIPTION","school","degree","SCHOOL","DEGREE","isValidYear","year","RegExp","test","validator","phone","Number","isNaN","parseInt","CategoryItem","state","errors","Set","validate","property","input","v","error","setState","add","this","props","category","categoryId","categoryName","editItem","removeItem","id","size","map","index","Object","keys","filter","type","name","placeholder","value","onChange","e","target","onBlur","onClick","Component","Experience","data","edit","remove","exp","Education","edu","PersonalInfo","pers","CVForm","personalInfo","editPersonalInfo","experiences","addExperience","editExperiences","removeExperience","educations","addEducation","editEducations","removeEducation","reset","PersonalInfoItem","Category","children","toLowerCase","ExperienceItem","EducationItem","CVOutput","experience","education","App","initState","initialState","values","uniqid","fromEntries","useState","slice","findIndex","item","useCVData","addCategoryItem","editCategoryItem","removeCategoryItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uXAIA,SAASA,IACL,OACI,qBAAKC,UAAU,YAAf,SACI,oBAAIA,UAAU,iBAAd,sB,MCJZ,SAASC,IACL,OACI,qBAAKD,UAAU,YAAf,SACI,mBAAGE,KAAK,+BAAR,8B,eCLNC,EACI,cADJA,EAEE,YAFFA,EAGM,SAHNA,EAIM,SCJNC,EACI,cADJA,EAEE,YAFFA,EAGO,UAHPA,EAIQ,WAJRA,EAKW,cCLXC,EACS,YADTA,EAEQ,WAFRA,EAGK,QAHLA,EAII,SAJJA,EAKK,cALLA,EAMK,QCHLC,EAAiB,CACnBC,cAAe,eACfC,WAAY,aACZC,UAAW,aAGPF,EAAyCD,EAAzCC,cAAeC,EAA0BF,EAA1BE,WAAYC,EAAcH,EAAdG,UAE7BC,GAAU,mBACXH,EAAgB,CAAEI,MAAO,gBAAiBC,MDHrB,WAAyF,IAAD,EAAvFC,EAAuF,uDAA3E,GAAIC,EAAuE,uDAA5D,GAAIH,EAAwD,uDAAhD,GAAII,EAA4C,uDAArC,GAAIC,EAAiC,uDAAnB,GAAIC,EAAe,uDAAP,GAC/FC,EAAmDb,EAAxCc,EAAwCd,EAA9Be,EAA8Bf,EAAvBgB,EAAuBhB,EAAjBiB,EAAiBjB,EAAVkB,EAAUlB,EAC3D,OAAO,EAAP,iBACKa,EAAYL,GADjB,cAEKM,EAAWL,GAFhB,cAGKM,EAAQT,GAHb,cAIKU,EAAON,GAJZ,cAKKO,EAAQN,GALb,cAMKO,EAAQN,GANb,KCAY,cAEXT,EAAa,CAAEG,MAAO,aAAcC,MFLjB,WAAwE,IAAD,EAAtEY,EAAsE,uDAA/D,GAAIC,EAA2D,uDAAtD,GAAIC,EAAkD,uDAAxC,GAAIC,EAAoC,uDAAzB,GAAIC,EAAqB,uDAAP,GAC5EC,EAA6CzB,EAAvC0B,EAAuC1B,EAAnC2B,EAAmC3B,EAA1B4B,EAA0B5B,EAAhB6B,EAAgB7B,EACrD,OAAO,EAAP,iBACKyB,EAAOL,GADZ,cAEKM,EAAKL,GAFV,cAGKM,EAAUL,GAHf,cAIKM,EAAWL,GAJhB,cAKKM,EAAcL,GALnB,KECY,cAGXnB,EAAY,CAAEE,MAAO,YAAaC,MHPhB,WAAmD,IAAD,EAAjDY,EAAiD,uDAA1C,GAAIC,EAAsC,uDAAjC,GAAIS,EAA6B,uDAApB,GAAIC,EAAgB,uDAAP,GACtDN,EAA6B1B,EAAvB2B,EAAuB3B,EAAnBiC,EAAmBjC,EAAXkC,EAAWlC,EACrC,OAAO,EAAP,iBACK0B,EAAOL,GADZ,cAEKM,EAAKL,GAFV,cAGKW,EAASF,GAHd,cAIKG,EAASF,GAJd,KGEY,G,gCCTRZ,EAAiBlB,EAAViB,EAAUjB,EACjBwB,EAAazB,EAAP0B,EAAO1B,EAUfkC,EAAc,SAACC,GACjB,OAAO,IAAIC,OAAO,YAAYC,KAAKF,GAAQ,KAAO,gBAGhDG,GAAS,mBACVnB,GAbgB,SAACN,GAClB,OAAO,IAAIuB,OAAO,uDAAuDC,KAAKxB,GAAS,KAAO,mBAWnF,cAEVK,GAVsB,SAACqB,GACxB,OAAOC,OAAOC,MAAMC,SAASH,IAAU,sBAAwB,QAOpD,cAGVd,EAAOS,GAHG,cAIVR,EAAKQ,GAJK,GCdTS,G,kNACFC,MAAQ,CACJC,OAAQ,IAAIC,K,EAGhBC,SAAW,SAACC,EAAUC,GAClB,IAAMC,EAAIZ,EAAUU,GACpB,GAAIE,EAAG,CACH,IAAMC,EAAQD,EAAED,GAChB,EAAKG,UAAS,gBAAGP,EAAH,EAAGA,OAAH,MAAiB,CAC3BA,OAAmB,OAAVM,EAAkB,IAAIL,IAAQ,IAAIA,IAAID,GAAQQ,IAAhB,UAAuBL,EAAvB,cAAqCG,U,4CAKxF,WAAU,IAAD,OACL,EAAqEG,KAAKC,MAAlEC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,aAAcC,EAA5C,EAA4CA,SAAUC,EAAtD,EAAsDA,WAC9Cf,EAAWS,KAAKV,MAAhBC,OACR,OACI,sBAAKgB,GAAE,UAAKH,EAAL,SAA0B9D,UAAU,gBAA3C,UAESiD,EAAOiB,KAAO,GACf,qBAAKlE,UAAU,WAAf,SAA2B,CAACiD,GAAQkB,KAAI,SAACZ,EAAOa,GAAR,OAAkB,4BAAgBb,GAARa,QAGlEC,OACKC,KAAKV,GACLW,QAAO,SAAAnB,GAAQ,MAAiB,OAAbA,KACnBe,KAAI,SAACf,GACF,OAAO,uBAEHoB,KAAK,OACLC,KAAMrB,EACNsB,YAAatB,EACbuB,MAAOf,EAASR,GAChBwB,SAAU,SAACC,GAAD,OAAOd,EAASF,EAAYgB,EAAEC,OAAOL,KAAMI,EAAEC,OAAOH,QAC9DI,OAAQ,SAACF,GAAD,OAAO,EAAK1B,SAASC,EAAUyB,EAAEC,OAAOH,SAP7C,UACKd,GADL,OACkBT,OAUpCY,GAAc,wBAAQgB,QAAShB,EAAjB,2B,GAxCJiB,c,KCC3B,SAASC,EAAT,GAAkD,IAA5BC,EAA2B,EAA3BA,KAAM1B,EAAqB,EAArBA,IAAK2B,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OAC3B1E,EAAUD,EAAWJ,EAAeE,YAApCG,MACR,OACI,sBAAKX,UAAU,mBAAf,UACI,oBAAIA,UAAU,yBAAd,SAAwCW,IACxC,qBAAKX,UAAU,yBAAf,SACKmF,EAAKhB,KAAI,SAACmB,GAAD,OACN,cAAC,EAAD,CAEI1B,SAAU0B,EACVzB,WAAYyB,EAAIrB,GAChBH,aAAcnD,EACdoD,SAAUqB,EACVpB,WAAY,kBAAMqB,EAAOC,EAAIrB,MALxBqB,EAAIrB,SASrB,wBAAQjE,UAAU,uBAAuBgF,QAASvB,EAAlD,0BCjBZ,SAAS8B,EAAT,GAAiD,IAA5BJ,EAA2B,EAA3BA,KAAM1B,EAAqB,EAArBA,IAAK2B,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OAC1B1E,EAAUD,EAAWJ,EAAeG,WAApCE,MACR,OACI,sBAAKX,UAAU,mBAAf,UACI,oBAAIA,UAAU,yBAAd,uBACA,qBAAKA,UAAU,yBAAf,SAEQmF,EAAKhB,KAAI,SAAAqB,GAAG,OACR,cAAC,EAAD,CAEI5B,SAAU4B,EACV3B,WAAY2B,EAAIvB,GAChBH,aAAcnD,EACdoD,SAAUqB,EACVpB,WAAY,kBAAMqB,EAAOG,EAAIvB,MALxBuB,EAAIvB,SAUzB,wBAAQjE,UAAU,uBAAuBgF,QAASvB,EAAlD,0BCnBZ,SAASgC,EAAT,GAAuC,IAAfN,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAClBzE,EAAUD,EAAWJ,EAAeC,eAApCI,MACR,OACI,sBAAKX,UAAU,mBAAf,UACI,oBAAIA,UAAU,yBAAd,SAAwCW,IACxC,qBAAKX,UAAU,yBAAf,SAEQmF,EAAKhB,KAAI,SAACuB,GAAD,OACL,cAAC,EAAD,CAEI9B,SAAU8B,EACV7B,WAAY6B,EAAKzB,GACjBH,aAAcnD,EACdoD,SAAUqB,GAJLM,EAAKzB,Y,MCRtC,SAAS0B,EAAOhC,GACZ,IAAQiC,EAAmCjC,EAAnCiC,aAAcC,EAAqBlC,EAArBkC,iBACdC,EAAkEnC,EAAlEmC,YAAaC,EAAqDpC,EAArDoC,cAAeC,EAAsCrC,EAAtCqC,gBAAiBC,EAAqBtC,EAArBsC,iBAC7CC,EAA8DvC,EAA9DuC,WAAYC,EAAkDxC,EAAlDwC,aAAcC,EAAoCzC,EAApCyC,eAAgBC,EAAoB1C,EAApB0C,gBAC1CC,EAAU3C,EAAV2C,MACR,OACI,qBAAKtG,UAAU,UAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,cAACyF,EAAD,CAAcN,KAAMS,EAAcR,KAAMS,IACxC,cAACX,EAAD,CAAYC,KAAMW,EAAarC,IAAKsC,EAAeX,KAAMY,EAAiBX,OAAQY,IAClF,cAACV,EAAD,CAAWJ,KAAMe,EAAYzC,IAAK0C,EAAcf,KAAMgB,EAAgBf,OAAQgB,IAC9E,wBAAQrG,UAAU,oBAAoBgF,QAASsB,EAA/C,wB,MCfhB,SAASC,EAAT,GAAmG,IAAvEzC,EAAsE,EAAtEA,aAAcjD,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,SAAUH,EAAmC,EAAnCA,MAAOI,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MACrF,OACI,sBAAKjB,UAAS,UAAK8D,EAAL,YAAd,UACI,sBAAK9D,UAAS,UAAK8D,EAAL,WAAd,UACKnD,GAAS,oBAAIX,UAAS,UAAK8D,EAAL,UAAb,SAAyCnD,IACnD,sBAAKX,UAAS,UAAK8D,EAAL,aAAd,UACI,oBAAI9D,UAAS,UAAK8D,EAAL,cAAb,SAA6CjD,IAC7C,oBAAIb,UAAS,UAAK8D,EAAL,aAAb,SAA4ChD,UAGpD,sBAAKd,UAAS,UAAK8D,EAAL,YAAd,UACI,mBAAG9D,UAAS,UAAK8D,EAAL,UAAZ,oBAAiD,mBAAG9D,UAAS,UAAK8D,EAAL,SAAZ,SAAuC/C,IACxF,mBAAGf,UAAS,UAAK8D,EAAL,UAAZ,0BAAuD,mBAAG9D,UAAS,UAAK8D,EAAL,UAAZ,SAAwC9C,IAC/F,mBAAGhB,UAAS,UAAK8D,EAAL,UAAZ,mBAAgD,mBAAG9D,UAAS,UAAK8D,EAAL,UAAZ,SAAwC7C,UCfxG,SAASuF,EAAT,GAAwC,IAApB7F,EAAmB,EAAnBA,MAAO8F,EAAY,EAAZA,SACvB,OACI,sBAAKzG,UAAU,kBAAf,UACKW,GAAS,oBAAIX,UAAU,wBAAd,SAAuCW,IACjD,qBAAKX,UAAU,wBAAf,SACKyG,OCAjB,SAAShB,EAAT,GAAyC,IAAjBG,EAAgB,EAAhBA,aACZrF,EAAkBD,EAAlBC,cACAW,EAAmDb,EAAxCc,EAAwCd,EAA9Be,EAA8Bf,EAAvBgB,EAAuBhB,EAAjBiB,EAAiBjB,EAAVkB,EAAUlB,EAC3D,OACI,cAAC,EAAD,UACI,cAACkG,EAAD,CACIzC,aAAcvD,EAAcmG,cAC5B7F,UAAW+E,EAAa1E,GACxBJ,SAAU8E,EAAazE,GACvBR,MAAOiF,EAAaxE,GACpBL,KAAM6E,EAAavE,GACnBL,YAAa4E,EAAatE,GAC1BL,MAAO2E,EAAarE,O,MCdpC,SAASoF,EAAT,GAAqF,IAA3D7C,EAA0D,EAA1DA,aAActC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACjE,OACI,sBAAK5B,UAAS,UAAK8D,EAAL,YAAd,UACI,sBAAK9D,UAAS,UAAK8D,EAAL,WAAd,UACI,qBAAK9D,UAAS,UAAK8D,EAAL,UAAd,SACI,mBAAG9D,UAAS,UAAK8D,EAAL,WAAZ,mBAA4CtC,EAA5C,cAAsDC,OAE1D,sBAAKzB,UAAS,UAAK8D,EAAL,SAAd,UACI,mBAAG9D,UAAS,UAAK8D,EAAL,aAAZ,SAA2CnC,IAC3C,mBAAG3B,UAAS,UAAK8D,EAAL,YAAZ,SAA0CpC,UAGlD,qBAAK1B,UAAS,UAAK8D,EAAL,gBAAd,SACI,mBAAG9D,UAAS,UAAK8D,EAAL,gBAAZ,SAA8ClC,SCX9D,SAASsD,EAAT,GAAsC,IAAhBY,EAAe,EAAfA,YACVtF,EAAeF,EAAfE,WACAqB,EAA6CzB,EAAvC0B,EAAuC1B,EAAnC2B,EAAmC3B,EAA1B4B,EAA0B5B,EAAhB6B,EAAgB7B,EACrD,OACI,cAAC,EAAD,CAAUO,MAAM,aAAhB,SAEQmF,EAAY3B,KAAI,SAACmB,EAAKlB,GAAN,OACZ,cAACuC,EAAD,CAEI7C,aAActD,EAAWkG,cACzBlF,KAAM8D,EAAIzD,GACVJ,GAAI6D,EAAIxD,GACRJ,QAAS4D,EAAIvD,GACbJ,SAAU2D,EAAItD,GACdJ,YAAa0D,EAAIrD,IANZmC,Q,MCV7B,SAASwC,GAAT,GAAoE,IAA3C9C,EAA0C,EAA1CA,aAActC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,GAAIS,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACrD,OACI,qBAAKnC,UAAS,UAAK8D,EAAL,YAAd,SACI,sBAAK9D,UAAS,UAAK8D,EAAL,WAAd,UACI,qBAAK9D,UAAS,UAAK8D,EAAL,UAAd,SACI,mBAAG9D,UAAS,UAAK8D,EAAL,WAAZ,mBAA4CtC,EAA5C,cAAsDC,OAE1D,sBAAKzB,UAAS,UAAK8D,EAAL,SAAd,UACI,mBAAG9D,UAAS,UAAK8D,EAAL,WAAZ,SAAyC3B,IACzC,mBAAGnC,UAAS,UAAK8D,EAAL,WAAZ,SAAyC5B,YCP7D,SAASqD,GAAT,GAAoC,IAAfW,EAAc,EAAdA,WACTzF,EAAcH,EAAdG,UACAoB,EAA6B1B,EAAvB2B,EAAuB3B,EAAnBiC,EAAmBjC,EAAXkC,EAAWlC,EACrC,OACI,cAAC,EAAD,CAAUQ,MAAM,YAAhB,SAEQuF,EAAW/B,KAAI,SAACqB,EAAKpB,GAAN,OACX,cAACwC,GAAD,CAEI9C,aAAcrD,EAAUiG,cACxBlF,KAAMgE,EAAI3D,GACVJ,GAAI+D,EAAI1D,GACRI,OAAQsD,EAAIpD,GACZD,OAAQqD,EAAInD,IALP+B,Q,MCR7B,SAASyC,GAAT,GAA4D,IAAxCjB,EAAuC,EAAvCA,aAAckB,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,UAC1C,OACI,qBAAK/G,UAAU,SAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAAC,EAAD,CAAc4F,aAAcA,EAAa,KACzC,cAAC,EAAD,CAAYE,YAAagB,IACzB,cAAC,GAAD,CAAWZ,WAAYa,S,kDCD/BxG,GAAyCD,EAAzCC,cAAeC,GAA0BF,EAA1BE,WAAYC,GAAcH,EAAdG,UAsCpBuG,OApCf,WACE,MCTF,WACI,IAAMC,EAAY,WACd,IAAMC,EAAe7C,OAChB8C,OAAO7G,GACP6D,KAAI,SAACP,GAAD,MAAc,CACf,CAACA,GAAW,CAAC,cAELK,GAAImD,QACD1G,EAAWkD,GAAUhD,cAIxC,OAAOyD,OAAOgD,YAAYH,IAG9B,EAA0BI,mBAASL,KAAnC,mBAAOjE,EAAP,KAAcQ,EAAd,KAoCA,MAAO,CACHR,EAnCoB,SAACc,GACrB,IAAIF,EAAWZ,EAAMc,GAAcyD,QACnC3D,EAAQ,uBACDA,GADC,eAEFK,GAAImD,QAAa1G,EAAWoD,GAAclD,WAEhD4C,EAAS,6BACFR,GADC,kBAEHc,EAAeF,MAIC,SAACE,EAAcG,EAAIb,EAAUuB,GAClD,IAAMf,EAAWZ,EAAMc,GAAcyD,QAC/BnD,EAAQR,EAAS4D,WAAU,SAACC,GAAD,OAAUA,EAAKxD,KAAOA,KACvDL,EAASQ,GAAOhB,GAAYuB,EAC5BnB,EAAS,6BACFR,GADC,IAEJY,eAImB,SAACE,EAAcG,GACtC,IAAML,EAAWZ,EAAMc,GACvBN,EAAS,6BACFR,GADC,kBAEHc,EAAeF,EAASW,QAAO,SAACkD,GAAD,OAAUA,EAAKxD,KAAOA,SAIhD,WACVT,EAASyD,ODjCXS,GANJ,mBACE1E,EADF,KAEE2E,EAFF,KAGEC,EAHF,KAIEC,EAJF,KAKEvB,EALF,KAQA,OACE,sBAAKtG,UAAU,MAAf,UACE,cAAC,EAAD,IACA,iCACE,cAAC,EAAD,CACE4F,aAAc5C,EAAMzC,IACpBsF,iBAAkB,SAAC5B,EAAIb,EAAUuB,GAAf,OAAyBiD,EAAiBrH,GAAe0D,EAAIb,EAAUuB,IAEzFmB,YAAa9C,EAAMxC,IACnBuF,cAAe,kBAAM4B,EAAgBnH,KACrCwF,gBAAiB,SAAC/B,EAAIb,EAAUuB,GAAf,OAAyBiD,EAAiBpH,GAAYyD,EAAIb,EAAUuB,IACrFsB,iBAAkB,SAAChC,GAAD,OAAQ4D,EAAmBrH,GAAYyD,IAEzDiC,WAAYlD,EAAMvC,IAClB0F,aAAc,kBAAMwB,EAAgBlH,KACpC2F,eAAgB,SAACnC,EAAIb,EAAUuB,GAAf,OAAyBiD,EAAiBnH,GAAWwD,EAAIb,EAAUuB,IACnF0B,gBAAiB,SAACpC,GAAD,OAAQ4D,EAAmBpH,GAAWwD,IAEvDqC,MAAOA,IAET,cAAC,GAAD,CAAUV,aAAc5C,EAAMzC,IAAgBwG,UAAW/D,EAAMvC,IAAYqG,WAAY9D,EAAMxC,SAE/F,cAAC,EAAD,QEtCNsH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1e2d515a.chunk.js","sourcesContent":["\nimport React from \"react\"\nimport \"../style/Header.css\"\n\nfunction Header() {\n    return (\n        <div className=\"cv-header\">\n            <h1 className=\"cv-header-logo\">CV-App</h1>\n        </div>\n    )\n}\n\nexport { Header }","import React from \"react\"\nimport \"../style/Footer.css\"\n\nfunction Footer() {\n    return (\n        <div className=\"cv-footer\">\n            <a href=\"https://www.github.com/Gzman\" >Build by Gzman</a>\n        </div>\n    )\n}\n\nexport { Footer }","\nconst EducationMeta = {\n    FROM: \"From (YYYY)\",\n    TO: \"To (YYYY)\",\n    SCHOOL: \"School\",\n    DEGREE: \"Degree\",\n}\n\nconst EducationModel = (from = \"\", to = \"\", school = \"\", degree = \"\") => {\n    const { FROM, TO, SCHOOL, DEGREE } = EducationMeta;\n    return {\n        [FROM]: from,\n        [TO]: to,\n        [SCHOOL]: school,\n        [DEGREE]: degree,\n    }\n}\n\nexport { EducationMeta, EducationModel }","\nconst ExperienceMeta = {\n    FROM: \"From (YYYY)\",\n    TO: \"To (YYYY)\",\n    COMPANY: \"Company\",\n    POSITION: \"Position\",\n    DESCRIPTION: \"Description\",\n}\n\nconst ExperienceModel = (from = \"\", to = \"\", company = \"\", position = \"\", description = \"\") => {\n    const { FROM, TO, COMPANY, POSITION, DESCRIPTION } = ExperienceMeta;\n    return {\n        [FROM]: from,\n        [TO]: to,\n        [COMPANY]: company,\n        [POSITION]: position,\n        [DESCRIPTION]: description,\n    }\n}\n\nexport { ExperienceMeta, ExperienceModel }","\nconst PersonalInfoMeta = {\n    FIRSTNAME: \"Firstname\",\n    LASTNAME: \"Lastname\",\n    TITLE: \"Title\",\n    CITY: \"Adress\",\n    PHONE: \"Phonenumber\",\n    EMAIL: \"Email\",\n}\n\nconst PersonalInfoModel = (firstname = \"\", lastname = \"\", title = \"\", city = \"\", phoneNumber = \"\", email = \"\") => {\n    const { FIRSTNAME, LASTNAME, TITLE, CITY, PHONE, EMAIL } = PersonalInfoMeta;\n    return {\n        [FIRSTNAME]: firstname,\n        [LASTNAME]: lastname,\n        [TITLE]: title,\n        [CITY]: city,\n        [PHONE]: phoneNumber,\n        [EMAIL]: email,\n    }\n}\n\nexport { PersonalInfoMeta, PersonalInfoModel }","import { EducationModel } from \"./EducationModel\"\nimport { ExperienceModel } from \"./ExperienceModel\"\nimport { PersonalInfoModel } from \"./PersonalInfoModel\"\n\nconst CategoriesMeta = {\n    PERSONAL_INFO: \"personalInfo\",\n    EXPERIENCE: \"experience\",\n    EDUCATION: \"education\",\n}\n\nconst { PERSONAL_INFO, EXPERIENCE, EDUCATION } = CategoriesMeta;\n\nconst Categories = {\n    [PERSONAL_INFO]: { title: \"Personal Info\", model: PersonalInfoModel },\n    [EXPERIENCE]: { title: \"Experience\", model: ExperienceModel },\n    [EDUCATION]: { title: \"Education\", model: EducationModel },\n}\n\nexport { CategoriesMeta, Categories }","import { PersonalInfoMeta } from \"../models/PersonalInfoModel\"\nimport { ExperienceMeta } from \"../models/ExperienceModel\"\n\nconst { EMAIL, PHONE } = PersonalInfoMeta;\nconst { FROM, TO } = ExperienceMeta;\n\nconst isValidEmail = (email) => {\n    return new RegExp(\"[a-zA-Z0-9]*.[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+\").test(email) ? null : \"Invalid email\";\n}\n\nconst isValidPhoneNumber = (phone) => {\n    return Number.isNaN(parseInt(phone)) ? \"Enter a phonenumber\" : null;\n}\n\nconst isValidYear = (year) => {\n    return new RegExp(\"[0-9]{4}\").test(year) ? null : \"Invalid year\"\n}\n\nconst validator = {\n    [EMAIL]: isValidEmail,\n    [PHONE]: isValidPhoneNumber,\n    [FROM]: isValidYear,\n    [TO]: isValidYear,\n}\n\nexport { validator }","import React, { Component } from \"react\"\nimport { validator } from \"../validator\"\nimport \"../../style/cv-form/CategoryItem.css\"\n\nclass CategoryItem extends Component {\n    state = {\n        errors: new Set(),\n    }\n\n    validate = (property, input) => {\n        const v = validator[property];\n        if (v) {\n            const error = v(input);\n            this.setState(({ errors }) => ({\n                errors: (error === null) ? new Set() : new Set(errors).add(`${property} : ${error}`),\n            }));\n        }\n    }\n\n    render() {\n        const { category, categoryId, categoryName, editItem, removeItem } = this.props;\n        const { errors } = this.state;\n        return (\n            <div id={`${categoryName}-item`} className=\"category-item\">\n                {\n                    (errors.size > 0) &&\n                    <div className=\"feedback\">{[errors].map((error, index) => <p key={index}>{error}</p>)}</div>\n                }\n                {\n                    Object\n                        .keys(category)\n                        .filter(property => property !== \"id\")\n                        .map((property) => {\n                            return <input\n                                key={`${categoryId}${property}`}\n                                type=\"text\"\n                                name={property}\n                                placeholder={property}\n                                value={category[property]}\n                                onChange={(e) => editItem(categoryId, e.target.name, e.target.value)}\n                                onBlur={(e) => this.validate(property, e.target.value)}\n                            />\n                        })\n                }\n                {removeItem && <button onClick={removeItem}>Delete</button>}\n            </div >\n        )\n    }\n}\n\nexport { CategoryItem }","import React from \"react\"\nimport { CategoriesMeta, Categories } from \"../../models/Categories\"\nimport { CategoryItem } from \"./CategoryItem\";\nimport \"../../style/cv-form/Category.css\"\n\nfunction Experience({ data, add, edit, remove }) {\n    const { title } = Categories[CategoriesMeta.EXPERIENCE];\n    return (\n        <div className=\"cv-form-category\">\n            <h2 className=\"cv-form-category-title\">{title}</h2>\n            <div className=\"cv-form-category-items\" >\n                {data.map((exp) =>\n                    <CategoryItem\n                        key={exp.id}\n                        category={exp}\n                        categoryId={exp.id}\n                        categoryName={title}\n                        editItem={edit}\n                        removeItem={() => remove(exp.id)}\n                    />\n                )}\n            </div>\n            <button className=\"cv-form-category-add\" onClick={add}>New Entry</button>\n        </div>\n    )\n}\n\nexport { Experience }","import React from \"react\";\nimport { Categories, CategoriesMeta } from \"../../models/Categories\"\nimport { CategoryItem } from \"./CategoryItem\"\nimport \"../../style/cv-form/Category.css\"\n\nfunction Education({ data, add, edit, remove }) {\n    const { title } = Categories[CategoriesMeta.EDUCATION];\n    return (\n        <div className=\"cv-form-category\">\n            <h2 className=\"cv-form-category-title\">Education</h2>\n            <div className=\"cv-form-category-items\">\n                {\n                    data.map(edu =>\n                        <CategoryItem\n                            key={edu.id}\n                            category={edu}\n                            categoryId={edu.id}\n                            categoryName={title}\n                            editItem={edit}\n                            removeItem={() => remove(edu.id)}\n                        />\n                    )\n                }\n            </div>\n            <button className=\"cv-form-category-add\" onClick={add}>New Entry</button>\n        </div>\n    )\n}\n\nexport { Education }","import React from \"react\"\nimport { CategoriesMeta, Categories } from \"../../models/Categories\"\nimport { CategoryItem } from \"./CategoryItem\"\nimport \"../../style/cv-form/Category.css\"\n\nfunction PersonalInfo({ data, edit }) {\n    const { title } = Categories[CategoriesMeta.PERSONAL_INFO];\n    return (\n        <div className=\"cv-form-category\">\n            <h2 className=\"cv-form-category-title\">{title}</h2>\n            <div className=\"cv-form-category-items\">\n                {\n                    data.map((pers) =>\n                        <CategoryItem\n                            key={pers.id}\n                            category={pers}\n                            categoryId={pers.id}\n                            categoryName={title}\n                            editItem={edit}\n                        />\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport { PersonalInfo }","import { Experience } from \"./Experience\"\nimport { Education } from \"./Education\"\nimport { PersonalInfo } from \"./PersonalInformation\";\nimport \"../../style/cv-form/CVForm.css\"\n\n\nfunction CVForm(props) {\n    const { personalInfo, editPersonalInfo } = props;\n    const { experiences, addExperience, editExperiences, removeExperience } = props;\n    const { educations, addEducation, editEducations, removeEducation } = props;\n    const { reset } = props;\n    return (\n        <div className=\"cv-form\">\n            <div className=\"cv-form-categories\">\n                <PersonalInfo data={personalInfo} edit={editPersonalInfo} />\n                <Experience data={experiences} add={addExperience} edit={editExperiences} remove={removeExperience} />\n                <Education data={educations} add={addEducation} edit={editEducations} remove={removeEducation} />\n                <button className=\"cv-form-reset-btn\" onClick={reset}>Reset</button>\n            </div>\n        </div>\n    )\n}\n\nexport { CVForm }","import \"../../style/cv-output/PersonalInformation.css\"\n\nfunction PersonalInfoItem({ categoryName, firstname, lastname, title, city, phoneNumber, email }) {\n    return (\n        <div className={`${categoryName}-content`}>\n            <div className={`${categoryName}-header`}>\n                {title && <h2 className={`${categoryName}-title`}>{title}</h2>}\n                <div className={`${categoryName}-fullname`}>\n                    <h2 className={`${categoryName}-firstname`}>{firstname}</h2>\n                    <h2 className={`${categoryName}-lastname`}>{lastname}</h2>\n                </div>\n            </div>\n            <div className={`${categoryName}-contact`}>\n                <p className={`${categoryName}-label`}>Adress</p><p className={`${categoryName}-city`}>{city}</p>\n                <p className={`${categoryName}-label`}>Phone Number</p><p className={`${categoryName}-phone`}>{phoneNumber}</p>\n                <p className={`${categoryName}-label`}>Email</p><p className={`${categoryName}-email`}>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport { PersonalInfoItem }","function Category({ title, children }) {\n    return (\n        <div className=\"output-category\">\n            {title && <h2 className=\"output-category-title\">{title}</h2>}\n            <div className=\"output-category-items\">\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport { Category }","import { CategoriesMeta } from \"../../models/Categories\";\nimport { PersonalInfoItem } from \"./PersonalInfoItem\";\nimport { PersonalInfoMeta } from \"../../models/PersonalInfoModel\";\nimport { Category } from \"./Category\"\n\nfunction PersonalInfo({ personalInfo }) {\n    const { PERSONAL_INFO } = CategoriesMeta;\n    const { FIRSTNAME, LASTNAME, TITLE, CITY, PHONE, EMAIL } = PersonalInfoMeta;\n    return (\n        <Category>\n            <PersonalInfoItem\n                categoryName={PERSONAL_INFO.toLowerCase()}\n                firstname={personalInfo[FIRSTNAME]}\n                lastname={personalInfo[LASTNAME]}\n                title={personalInfo[TITLE]}\n                city={personalInfo[CITY]}\n                phoneNumber={personalInfo[PHONE]}\n                email={personalInfo[EMAIL]}\n            />\n        </Category>\n    )\n}\n\nexport { PersonalInfo }","import React from \"react\"\nimport \"../../style/cv-output/Experience.css\"\n\nfunction ExperienceItem({ categoryName, from, to, company, position, description }) {\n    return (\n        <div className={`${categoryName}-content`}>\n            <div className={`${categoryName}-header`}>\n                <div className={`${categoryName}-years`}>\n                    <p className={`${categoryName}-period`}>{`${from} - ${to}`}</p>\n                </div>\n                <div className={`${categoryName}-info`}>\n                    <p className={`${categoryName}-position`}>{position}</p>\n                    <p className={`${categoryName}-company`}>{company}</p>\n                </div>\n            </div>\n            <div className={`${categoryName}-description`}>\n                <p className={`${categoryName}-description`}>{description}</p>\n            </div>\n        </div>\n    )\n}\n\nexport { ExperienceItem }","import { CategoriesMeta } from \"../../models/Categories\";\nimport { ExperienceItem } from \"./ExperienceItem\";\nimport { ExperienceMeta } from \"../../models/ExperienceModel\";\nimport { Category } from \"./Category\"\n\nfunction Experience({ experiences }) {\n    const { EXPERIENCE } = CategoriesMeta;\n    const { FROM, TO, COMPANY, POSITION, DESCRIPTION } = ExperienceMeta;\n    return (\n        <Category title=\"Experience\">\n            {\n                experiences.map((exp, index) =>\n                    <ExperienceItem\n                        key={index}\n                        categoryName={EXPERIENCE.toLowerCase()}\n                        from={exp[FROM]}\n                        to={exp[TO]}\n                        company={exp[COMPANY]}\n                        position={exp[POSITION]}\n                        description={exp[DESCRIPTION]}\n                    />\n                )\n            }\n        </Category>\n    )\n}\n\nexport { Experience }","import React from \"react\"\nimport \"../../style/cv-output/Education.css\"\n\nfunction EducationItem({ categoryName, from, to, school, degree }) {\n    return (\n        <div className={`${categoryName}-content`}>\n            <div className={`${categoryName}-header`}>\n                <div className={`${categoryName}-years`}>\n                    <p className={`${categoryName}-period`}>{`${from} - ${to}`}</p>\n                </div>\n                <div className={`${categoryName}-info`}>\n                    <p className={`${categoryName}-degree`}>{degree}</p>\n                    <p className={`${categoryName}-school`}>{school}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport { EducationItem }","import { CategoriesMeta } from \"../../models/Categories\";\nimport { EducationItem } from \"./EducationItem\";\nimport { EducationMeta } from \"../../models/EducationModel\";\nimport { Category } from \"./Category\"\n\nfunction Education({ educations }) {\n    const { EDUCATION } = CategoriesMeta;\n    const { FROM, TO, SCHOOL, DEGREE } = EducationMeta;\n    return (\n        <Category title=\"Education\">\n            {\n                educations.map((edu, index) =>\n                    <EducationItem\n                        key={index}\n                        categoryName={EDUCATION.toLowerCase()}\n                        from={edu[FROM]}\n                        to={edu[TO]}\n                        school={edu[SCHOOL]}\n                        degree={edu[DEGREE]}\n                    />\n                )\n            }\n        </Category>\n    )\n}\n\nexport { Education }","import { PersonalInfo } from \"./PersonalInformation\"\nimport { Experience } from \"./Experience\"\nimport { Education } from \"./Education\"\nimport \"../../style/cv-output/CVOutput.css\"\n\nfunction CVOutput({ personalInfo, experience, education }) {\n    return (\n        <div className=\"output\">\n            <div className=\"output-paper\">\n                <PersonalInfo personalInfo={personalInfo[0]} />\n                <Experience experiences={experience} />\n                <Education educations={education} />\n            </div>\n        </div>\n    )\n}\n\nexport { CVOutput }","import React from \"react\";\nimport { Header } from \"./components/Header\";\nimport { Footer } from \"./components/Footer\";\nimport { CategoriesMeta } from \"./models/Categories\";\nimport { CVForm } from \"../src/components/cv-form/CVForm\";\nimport { CVOutput } from \"../src/components/cv-output/CVOutput\";\nimport { useCVData } from \"./hooks/useCVData\";\n\nimport \"./style/index.css\"\n\nconst { PERSONAL_INFO, EXPERIENCE, EDUCATION } = CategoriesMeta;\n\nfunction App() {\n  const [\n    state,\n    addCategoryItem,\n    editCategoryItem,\n    removeCategoryItem,\n    reset\n  ] = useCVData();\n\n  return (\n    <div className=\"App\" >\n      <Header />\n      <main>\n        <CVForm\n          personalInfo={state[PERSONAL_INFO]}\n          editPersonalInfo={(id, property, value) => editCategoryItem(PERSONAL_INFO, id, property, value)}\n\n          experiences={state[EXPERIENCE]}\n          addExperience={() => addCategoryItem(EXPERIENCE)}\n          editExperiences={(id, property, value) => editCategoryItem(EXPERIENCE, id, property, value)}\n          removeExperience={(id) => removeCategoryItem(EXPERIENCE, id)}\n\n          educations={state[EDUCATION]}\n          addEducation={() => addCategoryItem(EDUCATION)}\n          editEducations={(id, property, value) => editCategoryItem(EDUCATION, id, property, value)}\n          removeEducation={(id) => removeCategoryItem(EDUCATION, id)}\n\n          reset={reset}\n        />\n        <CVOutput personalInfo={state[PERSONAL_INFO]} education={state[EDUCATION]} experience={state[EXPERIENCE]} />\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","import { useState } from \"react\";\nimport { CategoriesMeta, Categories } from \"../models/Categories\";\nimport uniqid from \"uniqid\";\n\nfunction useCVData() {\n    const initState = () => {\n        const initialState = Object\n            .values(CategoriesMeta)\n            .map((category) => [\n                [category], [\n                    {\n                        id: uniqid(),\n                        ...Categories[category].model(),\n                    }\n                ]\n            ]);\n        return Object.fromEntries(initialState);\n    }\n\n    const [state, setState] = useState(initState());\n\n    const addCategoryItem = (categoryName) => {\n        let category = state[categoryName].slice();\n        category = [\n            ...category,\n            { id: uniqid(), ...Categories[categoryName].model() },\n        ];\n        setState({\n            ...state,\n            [categoryName]: category,\n        });\n    }\n\n    const editCategoryItem = (categoryName, id, property, value) => {\n        const category = state[categoryName].slice();\n        const index = category.findIndex((item) => item.id === id);\n        category[index][property] = value;\n        setState({\n            ...state,\n            category,\n        });\n    }\n\n    const removeCategoryItem = (categoryName, id) => {\n        const category = state[categoryName];\n        setState({\n            ...state,\n            [categoryName]: category.filter((item) => item.id !== id),\n        });\n    }\n\n    const reset = () => {\n        setState(initState());\n    }\n\n    return [\n        state,\n        addCategoryItem,\n        editCategoryItem,\n        removeCategoryItem,\n        reset\n    ];\n}\n\nexport { useCVData }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style/index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}